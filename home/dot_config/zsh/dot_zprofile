#!/usr/bin/env zsh
#                                       ███ ██ ███
#                                      ██░ ░░ ░░██
#      ██████ ██████  ██████  █████   ░██   ██ ░██   █████
#     ░░░░██ ░██░░░██░░██░░█ ██░░░██ ██████░██ ░██  ██░░░██
#        ██  ░██  ░██ ░██ ░ ░██  ░██░░░██░ ░██ ░██ ░███████
#       ██   ░██████  ░██   ░██  ░██  ░██  ░██ ░██ ░██░░░░
#  ██  ██████░██░░░   ███   ░░█████   ░██  ░██ ░██ ░░█████
# ░░  ░░░░░░ ░██     ░░░     ░░░░░    ░░   ░░  ░░   ░░░░░
#            ░░
#
# Executes commands at login pre-zshrc.
# This file was automatically generated by Emacs Org-Mode `org-babel-tangle'.
# Do not change this file. The main file is `README.org`.

export WORDCHARS='*?[]~=&;!#$%^(){}<>'

if [[ -n "$IS_WSL" || -n "$WSL_DISTRO_NAME" ]];
then  # We are in wsl.
  export WINDOWS_HOST_IP=$(awk '/nameserver/ {print $2}' /etc/resolv.conf)
  export WINDOWS_USER="$(cmd.exe /C "echo %USERNAME%" 2>/dev/null | tr -d '\r')"
fi

export DOTFILES="$HOME/dotfiles"
export SOFTWARE="$HOME/soft"
export STOW_DIR="/usr/local/stow"
export LOCAL_STOW_DIR="$HOME/.local/stow"

() {
  local DIRS=($SOFTWARE $LOCAL_STOW_DIR)
  for local DIR in $DIRS; do
    if [[ ! -d $DIR ]]; then
      mkdir -p $DIR
    fi
  done
}

typeset -gU cdpath fpath mailpath path

path+=(
  /usr/local/{bin,sbin}
  /opt/visit/bin
  /opt/ParaView-5.8.1/bin
  $HOME/.emacs.d/bin
  $HOME/.spoof-dpi/bin  # https://github.com/xvzc/SpoofDPI
)

# cdpath=(
#   $HOME/.config
#   $cdpath
# )

if whence /home/linuxbrew/.linuxbrew/bin/brew > /dev/null 2>&1; then
  local BREWCACHE="$HOME/.cache/Homebrew/brewenv.zsh"

  if [[ ! -s $BREWCACHE(#q.md-7N) ]]; then
    /home/linuxbrew/.linuxbrew/bin/brew shellenv > $BREWCACHE 2> /dev/null
  fi
  source $BREWCACHE

  # Enable completion for brew and programs installes with brew.
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

# export EDITOR VISUAL
if (( $+commands[nvim] )); then
  export EDITOR='nvim'
  export VISUAL="$EDITOR"
  export DIFFPROG='nvim -d'
else
  export EDITOR='vim'
fi

export PAGER='less -R'

export MANWIDTH=80

typeset -T MANPATH manpath
typeset -gU manpath

# export MANPATH=$(command manpath)

# export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# export LESS='-F -i -M -R -S -w -z-3'
# export LESS='-F -i -M -R -S -z-3'
export LESS='-i -M -R -S -z-3'

if (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

export LESSHISTFILE="$HOME/.cache/lesshst"

# export LESS_TERMCAP_mb=$'\e[01;31m'     # Begins blinking.
export LESS_TERMCAP_md=$'\e[01;97m'     # Begins bold.
export LESS_TERMCAP_so=$'\e[00;47;30m'  # Begins standout-mode.
export LESS_TERMCAP_us=$'\e[04;97m'     # Begins underline.
export LESS_TERMCAP_me=$'\e[0m'         # Ends mode.
export LESS_TERMCAP_se=$'\e[0m'         # Ends standout-mode.
export LESS_TERMCAP_ue=$'\e[0m'         # Ends underline.

typeset -T LS_COLORS ls_colors

export ls_colors=(
  'di=1;36'   # Directory : bold; cyan
  'fi=0'      # File : default
  'ln=35'     # Symbolic Link : purple
  'pi=33'     # Fifo file
  'so=32'     # Socket file
  'bd=30;46'  # Block (buffered) special file : black; cyan background
  'cd=34;43'  # Character (unbuffered) special file
  # 'or'        # (ORPHAN) Symbolic link pointing to an orphaned non-existent file
  # 'mi'        # Non-existent file pointed to by a symbolic link (visible when you type ls -l)
  'su=30;41'  # File that is setuid (u+s)
  'sg=30;46'  # File that is setgid (g+s)
  'tw=30;42'  # Directory that is sticky and other-writable (+t,o+w)
  'ow=30;43'  # Directory that is other-writable (o+w) and not sticky
  'ex=31'     # File which is executable (ie. has ‘x’ set in permissions).
)

typeset -T INFOPATH infopath

typeset -gU infopath

infopath+=(
  /usr/share/info/
  $HOME/.nix-profile/share/info
)

if (( $+commands[bat] )); then
  export BAT_PAGER="less ${LESS}"
  # export BAT_PAGER="less -RF"
fi

if (( $+commands[cmake] )); then
  export CMAKE_BUILD_PARALLEL_LEVEL=15
fi

if (( $+commands[home-manager] )); then
  source $HOME/.nix-profile/etc/profile.d/hm-session-vars.sh
fi

export LSP_USE_PLISTS=true

export PARINIT="rTbgqR B=.,?'_A_a_@ Q=_s>|"

if (( $+commands[rg] )); then
  export RIPGREP_CONFIG_PATH="$HOME/.config/rg/config"
fi

if [[ $XDG_SESSION_TYPE == 'wayland' ]]; then
    export QT_QPA_PLATFORM=wayland
fi
export QT_AUTO_SCREEN_SCALE_FACTOR=1

# export TENSORFLOW="$HOME/.local/lib/python3.11/site-packages/tensorflow:$PATH"
# export TENSORFLOW_PATH="$HOME/.local/lib/python3.11/site-packages/tensorflow"
export TENSORFLOW_PATH="$HOME/.local/lib/python3.11/site-packages"

# vim: ft=zsh tw=80 ts=2 sw=2
